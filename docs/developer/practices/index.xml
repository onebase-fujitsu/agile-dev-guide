<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Developerのプラクティス on Fujitsu Agile Development Guide</title><link>https://onebase-fujitsu.github.io/agile-dev-guide/docs/developer/practices/</link><description>Recent content in Developerのプラクティス on Fujitsu Agile Development Guide</description><generator>Hugo -- gohugo.io</generator><language>ja</language><atom:link href="https://onebase-fujitsu.github.io/agile-dev-guide/docs/developer/practices/index.xml" rel="self" type="application/rss+xml"/><item><title>TDD</title><link>https://onebase-fujitsu.github.io/agile-dev-guide/docs/developer/practices/tdd/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://onebase-fujitsu.github.io/agile-dev-guide/docs/developer/practices/tdd/</guid><description>TDD # 概要 # テスト駆動開発（Test-Driven Development; TDD）は、先にテストを書き、次に機能の実装し、その後コードのリファクタリングを行うという</description></item><item><title>CI/CD</title><link>https://onebase-fujitsu.github.io/agile-dev-guide/docs/developer/practices/cicd/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://onebase-fujitsu.github.io/agile-dev-guide/docs/developer/practices/cicd/</guid><description>CI/CD # 概要 # CI/CDとは継続的インテグレーション（CI）と継続的デリバリー（CD）を組み合わせたプラクティスです。ビルド/テスト/デプロイを</description></item><item><title>ペアプログラミング</title><link>https://onebase-fujitsu.github.io/agile-dev-guide/docs/developer/practices/pairprogramming/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://onebase-fujitsu.github.io/agile-dev-guide/docs/developer/practices/pairprogramming/</guid><description>ペアプログラミング # 概要 # ペアプログラミングは、開発者がペアになってプログラミングを行うという手法です。 ドライバーとナビゲーターの二人一組で</description></item><item><title>ソロプログラミング</title><link>https://onebase-fujitsu.github.io/agile-dev-guide/docs/developer/practices/soroprogramming/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://onebase-fujitsu.github.io/agile-dev-guide/docs/developer/practices/soroprogramming/</guid><description>ソロプログラミング # 概要 # ソロプログラミングは、開発者が1人でプログラミングを行うという手法です。これまで多くのSIの現場で採用されており、</description></item></channel></rss>